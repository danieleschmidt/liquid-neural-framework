version: '3.8'

services:
  # Main application
  liquid-neural-framework:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: liquid_nn_app
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
      - ../results:/app/results
    environment:
      - PYTHONUNBUFFERED=1
      - JAX_PLATFORM_NAME=cpu
      - LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - liquid-network

  # Jupyter notebook server
  notebook:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: liquid_nn_notebook
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root
    ports:
      - "8888:8888"
    volumes:
      - ../notebooks:/app/notebooks
      - ../data:/app/data
      - ../results:/app/results
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=liquid-neural-framework
    networks:
      - liquid-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: liquid_nn_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - liquid-network

  # Visualization with Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: liquid_nn_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=liquid-neural
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - liquid-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: liquid_nn_redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - liquid-network

volumes:
  grafana-storage:
  redis-data:

networks:
  liquid-network:
    driver: bridge